			<parser
				displayName="[#4 TODO] JavaScript [CT#8647]"
				id         ="js_function_CT#8647"
				commentExpr="(?x)                                               # free-spacing (see `RegEx - Pattern Modifiers`)
								(?s:\x2F\x2A.*?\x2A\x2F)                        # Multi Line Comment
							|	(?m-s:\x2F{2}.*$)                               # Single Line Comment
							|	(?s:\x22(?:[^\x22\x5C]|\x5C.)*\x22)             # String Literal - Double Quoted
							|	(?s:\x27(?:[^\x27\x5C]|\x5C.)*\x27)             # String Literal - Single Quoted
							"
			>
				<classRange
					mainExpr    ="(?x)
							^
							[\t ]*
							(?:[A-Za-z_]  \w*  )
							(?:\.  prototype  )+
							[\s]+  (?:=)+
							[\s]*  \{
						"
					openSymbole = "\{"
					closeSymbole= "\}"
				>
					<className>
						<nameExpr expr="[A-Za-z_]\w*" />
					</className>
					<function
						mainExpr="(?x)
								^
								[\t ]*
								(?:[A-Za-z_]  \w  )+
								\s*  :+
								\s*  function
								\s*  \(
							"
					>
						<functionName>
							<funcNameExpr expr="^[\t ]*([A-Za-z_]\w*)" />
						</functionName>
					</function>
				</classRange>
				<function
					mainExpr   ="(?x)                                           # free-spacing (see `RegEx - Pattern Modifiers`)
							(?:
								(?:^  |  \s+  |  [;}.]  )  (?:[A-Za-z_$][\w$]*  \.  )*  [A-Za-z_$][\w$]*  \s*  [=:]
							|	   ^
							|	        [\s;}]+
							)
							\s*  function
							(?:\s+  [A-Za-z_$][\w$]*  )?
							\s*  \(  [^()]*  \)
							\s*  \{
						"
				>
					<functionName>
						<nameExpr expr="[A-Za-z_$][\w$]*\s*[=:]|[A-Za-z_$][\w$]*\s*\(" />
						<nameExpr expr="[A-Za-z_$][\w$]*" />
					</functionName>
					<className>
						<nameExpr expr="(?:[A-Za-z_$][\w$]*\.)*[A-Za-z_$][\w$]*\." />
						<nameExpr expr="(?:[A-Za-z_$][\w$]*\.)*[A-Za-z_$][\w$]*" />
					</className>
				</function>
			</parser>
