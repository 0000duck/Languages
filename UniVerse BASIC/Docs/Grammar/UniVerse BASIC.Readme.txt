The following example illustrates multiple subroutines and external calls.

    File SameNameSUBR:

        SUBROUTINE Bad_Example(A)
            A = “In global SameNameSUBR”
        RETURN

    *Suppose you catalog this subroutine as *SameNameSUBR

    File: GOOD_EXAMPLE:

        A = “”
        CALL MySub(A); * Call a local subroutine
        PRINT A
        CALL SameNameSUBR(A); *Call a local subroutine
        PRINT A
        “CALL *SameNameSUBR(A); *Call an external subroutine”
        PRINT A
        STOP

        *Define the local subroutine
        SUBROUTINE MySub (B)
             B = “In local MySub”
        RETURN

        *Define another local subroutine
        SUBROUTINE SameNameSUBR(B)
             B = “In local SameNameSUBR”
        RETURN

    Running this program returns the following result:

        In local MySub
        In local SameNameSUBR
        In global SameNameSUBR


The following example illustrates a local subroutine called by another local
subroutine.

        A = 1
        CALL MySub2(A); * Call a local subroutine
        PRINT “A is now: “:A
        STOP

        *Define the local subroutine
        SUBROUTINE MySub1(B)
             B += 1
        RETURN

        *Define another local subroutine
        SUBROUTINE MySub2(B)
             B += 1
             CALL MySub1(B)
        RETURN

    Running this program produces the following result:

        A is now: 3


The following example illustrates a local subroutine using COMMON.

        DEFFUN LocalFunc;  * Declare a local function
        COMMON A,B
        A = 1
        B = 1
        A = LocalFunc()
        ...
        STOP

        FUNCTION LocalFunc ; REM Define a local function
        COMMON A,B         ; REM must be specified to access A,B
        RETURN (A+B)

        END
