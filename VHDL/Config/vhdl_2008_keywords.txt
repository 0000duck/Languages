Old keywords:
        <Language name="vhdl" ext="vhd vhdl" commentLine="--">
            <Keywords name="instre1">access after alias all architecture array assert attribute begin block body buffer bus case component configuration constant disconnect downto else elsif end entity exit file for function generate generic group guarded if impure in inertial inout is label library linkage literal loop map new next null of on open others out package port postponed procedure process pure range record register reject report return select severity shared signal subtype then to transport type unaffected units until use variable wait when while with</Keywords>
            <Keywords name="instre2">abs and mod nand nor not or rem rol ror sla sll sra srl xnor xor</Keywords>
            <Keywords name="type1">active ascending base delayed driving driving_value event high image instance_name last_active last_event last_value left leftof length low path_name pos pred quiet range reverse_range right rightof simple_name stable succ transaction val value</Keywords>
            <Keywords name="type2">endfile falling_edge is_x now read readline resize resolved rising_edge rotate_left rotate_right shift_left shift_right std_match to_01 to_UX01 to_bit to_bitvector to_integer to_signed to_stdlogicvector to_stdulogic to_stdulogicvector to_unsigned to_x01 to_x01z write writeline</Keywords>
            <Keywords name="type3">ieee math_complex math_real numeric_bit numeric_std standard std std_logic_1164 std_logic_arith std_logic_misc std_logic_signed std_logic_textio std_logic_unsigned textio vital_primitives vital_timing work</Keywords>
            <Keywords name="type4">UX01 UX01Z X01 X01Z bit bit_vector boolean character delay_length file_open_kind file_open_status integer line natural positive real severity_level side signed std_logic std_logic_vector std_ulogic std_ulogic_vector string text time unsigned width</Keywords>
        </Language>


New keywords for VHDL 2008

    comments:
        commentStart="/*"
        commentEnd  ="*/"

    syntax keywords (instre1):
        ?? context force parameter release vunit

    attribute (type1):
        element subtype

    functions (type2):
        in env              : finish resolution_limit stop
        in std_logic_1164   : maximum minimum to_binary_string to_bsting to_hex_string to_hstring to_octal_string to_ostring to_string
        in textio           : binary_read binary_write bread bwrite flush hex_read hex_write hread hwrite justify octal_read octal_write oread owrite sread string_read string_write swrite tee
        in numeric_bit      : find_leftmost find_rightmost
        in numeric_std      : unresolved_signed unresolved_unsigned
        in fixed_generic_pkg: add_carry divide from_binary_string from_bstring from_hex_string from_hstring from_octal_string from_ostring from_string is_negative modulo reciprocal remainder saturate scalb sfix_high sfix_low sfixed_high sfixed_low to_real to_sfix_ufix_high to_sfixed to_ufix to_ufixed ufix_low ufixed_high ufixed_low

the functions in math_real and math_complex are not new but still not in the function list...

        in math_real        : arccos arccosh arcsin arcsinh arctan atctanh cbrt ceil cos cosh exp floor log log10 log2 realmax realmin round sign sin sinh sqrt tan tanh trunc unifrom
        in math_complex     : arg cmplx complex_to_value conj get_principal_value polar_to_complex
        in float_generic_pkg: add bitstoreal break_number classfp copysign divide dividebyp2 eq finite ge gt isnan le logb lt mac modulo multiply nanfp ne neg_inffp neg_zerofp nextafter normalize pos_inffp qnanfp realtobits reciprocal remainder subtract to_float to_float128 to_float32 to_float64 unordered zerofp

    package (type3): 
        env fixed_float_types fixed_generic_pkg fixed_pkg float_generic_pkg float_pkg numeric_bit_unsigned

    data_type (type4):
        in standard         : boolean_vector integer_vector real_vector time_vector
        in fixed_generic_pkg: sfixed u_sfixed u_ufixed ufixed unresolved_sfixed unresolved_ufixed
        in float_generic_pkg: float float128 float32 float64 u_float u_float128 u_float32 u_float64 unresolved_float unresolved_float128 unresolved_float32 unresolved_float64 valid_fpstate
        in math_complex     : comlex_polar complex


