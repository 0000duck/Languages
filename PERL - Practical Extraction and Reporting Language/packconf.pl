#!/usr/bin/perl

$usage = 'usage: perl packconf.pl <FNFILE> (<OUTFILE>)';

#
# analyze command line parameter
#
$sourcefile = $ARGV[0];
$outfile = $ARGV[1];

if ( $sourcefile eq "" ) {
	print STDERR "Error: $usage\n";
	exit(1);
}
if ( $outfile eq "" ) {
	print "Outfile is package.packconf\n";
    $outfile = 'package.packconf';
}
if ( $ARGV[2] ne "" ) {
	print STDERR "Too few arguments\n";
	print STDERR "Error: $usage\n";
	exit(1);
}
if (!( $sourcefile =~ /\/fn/ )) {
    print STDERR "Source file isn't the function file\n";
	print STDERR "Error: $usage\n";
	exit(1);
}


#
# get the sysdepended pathname
#
$cpu = $sourcefile;
$cpu =~ s/include\/(.*\/+).*$/$1/;
$cpu =~ s/(.*)\/$/$1/;

# parse definition file
open (IN, $sourcefile) or die "can not open $sourcefile!\n";

# create packageconf file
open(OUT, ">$outfile") or die "can not create or write to $outfile!\n";

##################################################################

$found = 0;

while(<IN>) {
    chomp;
    
    if ( $found eq 0 ) {
        next if (! (($prefix = $_) =~ s/^#ifndef (.*)SVC$/$1/));
        $found = 1;
    }
    
    if ( s/^#define ${prefix}(.*)_FN\t.*$/$1/ ) {
        $_ =~ tr/A-Z/a-z/;
        push @asmfiles, $_;
    }
}

@asmfiles = sort @asmfiles;

# creating of package configuration
print OUT "#\n";
print OUT "# Package configuration created by packconf\n";
print OUT "#\n\n";

print OUT "!VSTYPE \"Win32 Project/Static Library\"\n\n";

print OUT "!NAME svg_font_ssystub\n\n";

print OUT "# Describe Options here\n";
print OUT "# !OPTION <ebinder_variant> <adit_variant> <compiler/linker switches>\n\n";

print OUT "# Assembler files generated by mkiflib\n";

$count = 0; 
foreach (@asmfiles) {
    print OUT "!FILE src/${cpu}/@{asmfiles[$count]}.S\n";
    $count ++;
}

print OUT "\n";
print OUT "# List directories with exported headers here\n";
print OUT "!INCDIR include/${cpu}\n\n";

end:
close (IN);
close (OUT);
